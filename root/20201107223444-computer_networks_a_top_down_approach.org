#+title: Computer Networks: A top-down approach

Distributed hash table: good project to learn networking

UDP vs TCP: TCP is reliable, UDP is not.
UDP no guarantees, just data in and out.
TCP requires three-way handshake: client -> server, server -> client, client -> server.

* Socket programming assignments

The companion Web site includes six socket programming assignments. The
firstfour assignments are summarized below. The fifth assignment makes use of
theICMP protocol and is summarized at the end of Chapter 4. The sixth
assignmentemploys  multimedia  protocols  and  is  summarized  at  the  end  of
Chapter  7.  It  ishighly recommended that students complete several, if not
all, of these assignments.Students can find full details of these assignments,
as well as important snippets ofthe Python code, at the Web site

** Assignment 1: Web Server

In this assignment, you will develop a simple Web server in Python that is
capableof processing only one request. Specifically, your Web server will (i)
create a con-nection socket when contacted by a client (browser); (ii) receive
the HTTP requestfrom  this  connection;  (iii)  parse  the  request  to
determine  the  specific  file  beingrequested; (iv) get the requested file from
the server’s file system; (v) create anHTTP response message consisting of the
requested file preceded by header lines;and (vi) send the response over the TCP
connection to the requesting browser. If abrowser requests a file that is not
present in your server, your server should return a“404 Not Found” error
message.In the companion Web site, we provide the skeleton code for your server.
Yourjob is to complete the code, run your server, and then test your server by
sendingrequests from browsers running on different hosts. If you run your server
on a hostthat already has a Web server running on it, then you should use a
different port thanport 80 for your Web server.

** Assignment 2: UDP Pinger
In this programming assignment, you will write a client ping program in
Python.Your client will send a simple ping message to a server, receive a
correspondingpong message back from the server, and determine the delay between
when theclient sent the ping message and received the pong message. This delay
is called theRound  Trip  Time  (RTT).  The  functionality  provided  by  the
client  and  server  is similar to the functionality provided by standard ping
program available in modernoperating systems. However, standard ping programs
use the Internet Control Mes-sage Protocol (ICMP) (which we will study in
Chapter 4). Here we will create anonstandard (but simple!) UDP-based ping
program.Your ping program is to send 10 ping messages to the target server over
UDP.For each message, your client is to determine and print the RTT when the
correspon-ding pong message is returned. Because UDP is an unreliable protocol,
a packet sentby the client or server may be lost. For this reason, the client
cannot wait indefinitelyfor a reply to a ping message. You should have the
client wait up to one second for areply  from  the  server;  if  no  reply  is
received,  the  client  should assume  that  thepacket was lost and print a
message accordingly.In this assignment, you will be given the complete code for
the server (avail-able in the companion Web site). Your job is to write the
client code, which will bevery similar to the server code. It is recommended
that you first study carefully theserver code. You can then write your client
code, liberally cutting and pasting linesfrom the server code.

** Assignment 3: Mail Client
The goal of this programming assignment is to create a simple mail client that
sendsemail to any recipient. Your client will need to establish a TCP connection
with amail server (e.g., a Google mail server), dialogue with the mail server
using theSMTP protocol, send an email message to a recipient (e.g., your friend)
via the mailserver, and finally close the TCP connection with the mail
server.For this assignment, the companion Web site provides the skeleton code
foryour client. Your job is to complete the code and test your client by
sendingemail to different user accounts. You may also try sending through
differentservers (for example, through a Google mail server and through your
universitymail server).

** Assignment 4: Multi-Threaded Web Proxy

In this assignment, you will develop a Web proxy. When your proxy receives
anHTTP request for an object from a browser, it generates a new HTTP request
forthe same object and sends it to the origin server. When the proxy receives
thecorresponding HTTP response with the object from the origin server, it
creates anew HTTP response, including the object, and sends it to the client.
This proxywill be multi-threaded, so that it will be able to handle multiple
requests at thesame time.For this assignment, the companion Web site provides
the skeleton code for theproxy server. Your job is to complete the code, and
then test it by having differentbrowsers request Web objects via your proxy
